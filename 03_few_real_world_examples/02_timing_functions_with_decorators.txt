Below is the code for timing functions with a timer decorator.

### Python code below ###
import functools, time
def timer_decorator(param_function):
    @functools.wraps(param_function)
    def timer_wrapper(*args, **kwargs):
        start_time = time.perf_counter()
        return_value = param_function(*args, **kwargs)
        end_time = time.perf_counter()
        execution_time = end_time - start_time
        print(f"Finished {param_function.__name__!r} in {execution_time:.4f} secs")
        return return_value
    return timer_wrapper

@timer_decorator
def waste_some_time(param_number):
    sum_var = 0
    for i in range(1, param_number):
        sum_var = i*i + sum_var

waste_some_time(10)
waste_some_time(1000)   
